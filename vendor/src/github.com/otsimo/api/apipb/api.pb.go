// Code generated by protoc-gen-gogo.
// source: api.proto
// DO NOT EDIT!

/*
	Package apipb is a generated protocol buffer package.

	It is generated from these files:
		api.proto
		catalog.proto
		listener.proto
		messages.proto
		registry.proto
		search.proto
		watch.proto

	It has these top-level messages:
		CatalogItem
		CatalogRequest
		CatalogResponse
		Event
		Address
		Profile
		ChildGameEntry
		Child
		Author
		GameMetadata
		GameManifest
		Game
		GameRelease
		UploadToken
		GetProfileRequest
		GetChildRequest
		GetChildrenFromProfileRequest
		ChangeChildActivationRequest
		GetChildrenFromProfileResponse
		GetGameRequest
		GetGameFromNameRequest
		GameEntryRequest
		PublishResponse
		ValidateRequest
		IndexRequest
		SearchResult
		ListGamesRequest
		ListGamesResponse
		SearchRequest
		SearchResponse
		GetLatestVersionsRequest
		GameAndVersion
		GameVersionsResponse
		Response
		EmitRequest
		EmitResponse
		WatchRequest
		WatchEvent
		WatchResponse
*/
package apipb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for ApiService service

type ApiServiceClient interface {
	// Profile
	AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error)
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error)
	// Child
	AddChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error)
	GetChild(ctx context.Context, in *GetChildRequest, opts ...grpc.CallOption) (*Child, error)
	UpdateChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error)
	GetChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error)
	UpdateGameEntry(ctx context.Context, in *GameEntryRequest, opts ...grpc.CallOption) (*Response, error)
	ChangeActivation(ctx context.Context, in *ChangeChildActivationRequest, opts ...grpc.CallOption) (*Response, error)
	GetDisabledChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/AddProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/UpdateProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) AddChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/AddChild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChild(ctx context.Context, in *GetChildRequest, opts ...grpc.CallOption) (*Child, error) {
	out := new(Child)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetChild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/UpdateChild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error) {
	out := new(GetChildrenFromProfileResponse)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetChildren", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateGameEntry(ctx context.Context, in *GameEntryRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/UpdateGameEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ChangeActivation(ctx context.Context, in *ChangeChildActivationRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/ChangeActivation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetDisabledChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error) {
	out := new(GetChildrenFromProfileResponse)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetDisabledChildren", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiService service

type ApiServiceServer interface {
	// Profile
	AddProfile(context.Context, *Profile) (*Response, error)
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
	UpdateProfile(context.Context, *Profile) (*Response, error)
	// Child
	AddChild(context.Context, *Child) (*Response, error)
	GetChild(context.Context, *GetChildRequest) (*Child, error)
	UpdateChild(context.Context, *Child) (*Response, error)
	GetChildren(context.Context, *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error)
	UpdateGameEntry(context.Context, *GameEntryRequest) (*Response, error)
	ChangeActivation(context.Context, *ChangeChildActivationRequest) (*Response, error)
	GetDisabledChildren(context.Context, *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_AddProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).AddProfile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetProfile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).UpdateProfile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_AddChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Child)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).AddChild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetChild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_UpdateChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Child)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).UpdateChild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetChildrenFromProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetChildren(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_UpdateGameEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GameEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).UpdateGameEntry(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_ChangeActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ChangeChildActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).ChangeActivation(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetDisabledChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetChildrenFromProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetDisabledChildren(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apipb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddProfile",
			Handler:    _ApiService_AddProfile_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _ApiService_GetProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _ApiService_UpdateProfile_Handler,
		},
		{
			MethodName: "AddChild",
			Handler:    _ApiService_AddChild_Handler,
		},
		{
			MethodName: "GetChild",
			Handler:    _ApiService_GetChild_Handler,
		},
		{
			MethodName: "UpdateChild",
			Handler:    _ApiService_UpdateChild_Handler,
		},
		{
			MethodName: "GetChildren",
			Handler:    _ApiService_GetChildren_Handler,
		},
		{
			MethodName: "UpdateGameEntry",
			Handler:    _ApiService_UpdateGameEntry_Handler,
		},
		{
			MethodName: "ChangeActivation",
			Handler:    _ApiService_ChangeActivation_Handler,
		},
		{
			MethodName: "GetDisabledChildren",
			Handler:    _ApiService_GetDisabledChildren_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}
